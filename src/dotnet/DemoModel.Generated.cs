//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a RdGen v1.07.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using JetBrains.Annotations;

using JetBrains.Core;
using JetBrains.Diagnostics;
using JetBrains.Collections;
using JetBrains.Collections.Viewable;
using JetBrains.Lifetimes;
using JetBrains.Serialization;
using JetBrains.Rd;
using JetBrains.Rd.Base;
using JetBrains.Rd.Impl;
using JetBrains.Rd.Tasks;
using JetBrains.Rd.Util;
using JetBrains.Rd.Text;


// ReSharper disable RedundantEmptyObjectCreationArgumentList
// ReSharper disable InconsistentNaming
// ReSharper disable RedundantOverflowCheckingContext


namespace AvaloniaRider.Model
{
  
  
  /// <summary>
  /// <p>Generated from: DemoModel.kt:9</p>
  /// </summary>
  public class DemoModel : RdExtBase
  {
    //fields
    //public fields
    [NotNull] public IViewableProperty<AvaloniaRider.Model.A> A => _A;
    
    //private fields
    [NotNull] private readonly RdProperty<AvaloniaRider.Model.A> _A;
    
    //primary constructor
    private DemoModel(
      [NotNull] RdProperty<AvaloniaRider.Model.A> a
    )
    {
      if (a == null) throw new ArgumentNullException("a");
      
      _A = a;
      BindableChildren.Add(new KeyValuePair<string, object>("a", _A));
    }
    //secondary constructor
    private DemoModel (
    ) : this (
      new RdProperty<AvaloniaRider.Model.A>(AvaloniaRider.Model.A.Read, WriteA)
    ) {}
    //deconstruct trait
    //statics
    
    public static CtxReadDelegate<AvaloniaRider.Model.A> ReadA = Polymorphic<AvaloniaRider.Model.A>.ReadAbstract(AvaloniaRider.Model.A_Unknown.Read);
    
    public static  CtxWriteDelegate<AvaloniaRider.Model.A> WriteA = Polymorphic<AvaloniaRider.Model.A>.Write;
    
    protected override long SerializationHash => 617688167969472261L;
    
    protected override Action<ISerializers> Register => RegisterDeclaredTypesSerializers;
    public static void RegisterDeclaredTypesSerializers(ISerializers serializers)
    {
      serializers.Register(AvaloniaRider.Model.A.Read, AvaloniaRider.Model.A.Write);
      serializers.Register(A_Unknown.Read, A_Unknown.Write);
      
      serializers.RegisterToplevelOnce(typeof(DemoModel), DemoModel.RegisterDeclaredTypesSerializers);
    }
    
    public DemoModel(Lifetime lifetime, IProtocol protocol) : this()
    {
      Identify(protocol.Identities, RdId.Root.Mix("DemoModel"));
      Bind(lifetime, protocol, "DemoModel");
    }
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("DemoModel (");
      using (printer.IndentCookie()) {
        printer.Print("a = "); _A.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  /// <summary>
  /// <p>Generated from: DemoModel.kt:11</p>
  /// </summary>
  public class A : RdBindableBase
  {
    //fields
    //public fields
    [NotNull] public IViewableProperty<string> Prop1 => _Prop1;
    
    //private fields
    [NotNull] protected readonly RdProperty<string> _Prop1;
    
    //primary constructor
    protected A(
      [NotNull] RdProperty<string> prop1
    )
    {
      if (prop1 == null) throw new ArgumentNullException("prop1");
      
      _Prop1 = prop1;
      _Prop1.OptimizeNested = true;
      BindableChildren.Add(new KeyValuePair<string, object>("prop1", _Prop1));
    }
    //secondary constructor
    public A (
    ) : this (
      new RdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString)
    ) {}
    //deconstruct trait
    //statics
    
    public static CtxReadDelegate<A> Read = (ctx, reader) => 
    {
      var _id = RdId.Read(reader);
      var prop1 = RdProperty<string>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString);
      var _result = new A(prop1).WithId(_id);
      return _result;
    };
    
    public static CtxWriteDelegate<A> Write = (ctx, writer, value) => 
    {
      value.RdId.Write(writer);
      RdProperty<string>.Write(ctx, writer, value._Prop1);
    };
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("A (");
      using (printer.IndentCookie()) {
        printer.Print("prop1 = "); _Prop1.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
  
  
  public sealed class A_Unknown : A
  {
    //fields
    //public fields
    
    //private fields
    //primary constructor
    private A_Unknown(
      [NotNull] RdProperty<string> prop1
    ) : base (
      prop1
     ) 
    {
    }
    //secondary constructor
    public A_Unknown (
    ) : this (
      new RdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString)
    ) {}
    //deconstruct trait
    //statics
    
    public static new CtxReadDelegate<A_Unknown> Read = (ctx, reader) => 
    {
      var _id = RdId.Read(reader);
      var prop1 = RdProperty<string>.Read(ctx, reader, JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString);
      var _result = new A_Unknown(prop1).WithId(_id);
      return _result;
    };
    
    public static new CtxWriteDelegate<A_Unknown> Write = (ctx, writer, value) => 
    {
      value.RdId.Write(writer);
      RdProperty<string>.Write(ctx, writer, value._Prop1);
    };
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("A_Unknown (");
      using (printer.IndentCookie()) {
        printer.Print("prop1 = "); _Prop1.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
}
